#!/usr/bin/env ruby
## Usage: rip-config
##
## Prints sh(1) code which can be used to activate rip for the shell.

RIPDIR = ENV['RIPDIR']
RIPENV = ENV['RIPENV'] || 'active'

class EnvPath
  def initialize(name, subdir)
    @name   = name
    @subdir = subdir
    @value  = expand.split(':')
  end

  attr_reader :name, :subdir, :value

  def expand
    ENV[name] || ''
  end

  def to_s
    value.join(':')
  end

  def unshift(path)
    value.unshift(path)
  end

  def reject!(path)
    value.reject! { |p| p == path }
  end

  def match_env
    @_match_env ||= begin
      to_s =~ /#{RIPDIR}\/(\w+)\/#{subdir}/
      [$1, $&]
    end
  end

  def env
    match_env[0]
  end

  def env_path
    match_env[1]
  end

  def change_env!(new_env)
    if env != new_env
      reject! env_path
      unshift "$RIPDIR/#{new_env}/#{subdir}"
    end
  end
end


RUBYLIB = EnvPath.new('RUBYLIB', 'lib')
PATH    = EnvPath.new('PATH', 'bin')
MANPATH = EnvPath.new('MANPATH', 'man')

RUBYLIB.change_env! RIPENV
PATH.change_env! RIPENV
MANPATH.change_env! RIPENV

if ENV['RIPHELPERS'] != '0'
  system "rip-sh-helpers"
  puts "export RIPHELPERS=0"
end

puts "export RIPENV=#{RIPENV}" if RIPENV != 'active'

puts <<-end_shellcode
RIPVERBOSE=1
RIPDIR=${RIPDIR:-"$HOME/.rip"}
RUBYLIB="#{RUBYLIB}"
PATH="#{PATH}"
MANPATH="#{MANPATH}"
export RIPVERBOSE RIPDIR RUBYLIB PATH MANPATH
end_shellcode
